version: '3.8'

services:
  web:
    build:
      context: ./nicework
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    container_name: nicework_prod_web
    volumes:
      - static_volume:/home/nicework/web/staticfiles
      - media_volume:/home/nicework/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    container_name: nicework_prod_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 25432:5432
    env_file:
      - ./.env.prod.db
  nginx:
    image: nginx:1.15-alpine
    container_name: nicework_prod_nginx
    volumes:
      - static_volume:/home/nicework/web/staticfiles
      - media_volume:/home/nicework/web/mediafiles
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - web
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot: # certbot 서비스 추가
    image: certbot/certbot:v0.36.0
    restart: always
    container_name: nicework_prod_certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  media_volume:

